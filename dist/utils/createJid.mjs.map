{"version":3,"sources":["../../src/utils/createJid.ts"],"sourcesContent":["// Check if the number is MX or AR\nfunction formatMXOrARNumber(jid: string): string {\n  const countryCode = jid.substring(0, 2);\n\n  if (Number(countryCode) === 52 || Number(countryCode) === 54) {\n    if (jid.length === 13) {\n      const number = countryCode + jid.substring(3);\n      return number;\n    }\n\n    return jid;\n  }\n  return jid;\n}\n\n// Check if the number is br\nfunction formatBRNumber(jid: string) {\n  const regexp = new RegExp(/^(\\d{2})(\\d{2})\\d{1}(\\d{8})$/);\n  if (regexp.test(jid)) {\n    const match = regexp.exec(jid);\n    if (match && match[1] === '55') {\n      const joker = Number.parseInt(match[3][0]);\n      const ddd = Number.parseInt(match[2]);\n      if (joker < 7 || ddd < 31) {\n        return match[0];\n      }\n      return match[1] + match[2] + match[3];\n    }\n    return jid;\n  } else {\n    return jid;\n  }\n}\n\nexport function createJid(number: string): string {\n  number = number.replace(/:\\d+/, '');\n\n  if (number.includes('@g.us') || number.includes('@s.whatsapp.net') || number.includes('@lid')) {\n    return number;\n  }\n\n  if (number.includes('@broadcast')) {\n    return number;\n  }\n\n  number = number\n    ?.replace(/\\s/g, '')\n    .replace(/\\+/g, '')\n    .replace(/\\(/g, '')\n    .replace(/\\)/g, '')\n    .split(':')[0]\n    .split('@')[0];\n\n  if (number.includes('-') && number.length >= 24) {\n    number = number.replace(/[^\\d-]/g, '');\n    return `${number}@g.us`;\n  }\n\n  number = number.replace(/\\D/g, '');\n\n  if (number.length >= 18) {\n    number = number.replace(/[^\\d-]/g, '');\n    return `${number}@g.us`;\n  }\n\n  number = formatMXOrARNumber(number);\n\n  number = formatBRNumber(number);\n\n  return `${number}@s.whatsapp.net`;\n}\n"],"mappings":"AACA,SAASA,EAAmBC,EAAqB,CAC/C,IAAMC,EAAcD,EAAI,UAAU,EAAG,CAAC,EAEtC,OAAI,OAAOC,CAAW,IAAM,IAAM,OAAOA,CAAW,IAAM,KACpDD,EAAI,SAAW,GACFC,EAAcD,EAAI,UAAU,CAAC,EAMzCA,CACT,CAGA,SAASE,EAAeF,EAAa,CACnC,IAAMG,EAAS,IAAI,OAAO,8BAA8B,EACxD,GAAIA,EAAO,KAAKH,CAAG,EAAG,CACpB,IAAMI,EAAQD,EAAO,KAAKH,CAAG,EAC7B,GAAII,GAASA,EAAM,CAAC,IAAM,KAAM,CAC9B,IAAMC,EAAQ,OAAO,SAASD,EAAM,CAAC,EAAE,CAAC,CAAC,EACnCE,EAAM,OAAO,SAASF,EAAM,CAAC,CAAC,EACpC,OAAIC,EAAQ,GAAKC,EAAM,GACdF,EAAM,CAAC,EAETA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,CACtC,CACA,OAAOJ,CACT,KACE,QAAOA,CAEX,CAEO,SAASO,EAAUC,EAAwB,CAOhD,OANAA,EAASA,EAAO,QAAQ,OAAQ,EAAE,EAE9BA,EAAO,SAAS,OAAO,GAAKA,EAAO,SAAS,iBAAiB,GAAKA,EAAO,SAAS,MAAM,GAIxFA,EAAO,SAAS,YAAY,EACvBA,GAGTA,EAASA,GACL,QAAQ,MAAO,EAAE,EAClB,QAAQ,MAAO,EAAE,EACjB,QAAQ,MAAO,EAAE,EACjB,QAAQ,MAAO,EAAE,EACjB,MAAM,GAAG,EAAE,CAAC,EACZ,MAAM,GAAG,EAAE,CAAC,EAEXA,EAAO,SAAS,GAAG,GAAKA,EAAO,QAAU,IAC3CA,EAASA,EAAO,QAAQ,UAAW,EAAE,EAC9B,GAAGA,CAAM,UAGlBA,EAASA,EAAO,QAAQ,MAAO,EAAE,EAE7BA,EAAO,QAAU,IACnBA,EAASA,EAAO,QAAQ,UAAW,EAAE,EAC9B,GAAGA,CAAM,UAGlBA,EAAST,EAAmBS,CAAM,EAElCA,EAASN,EAAeM,CAAM,EAEvB,GAAGA,CAAM,oBAClB","names":["formatMXOrARNumber","jid","countryCode","formatBRNumber","regexp","match","joker","ddd","createJid","number"]}