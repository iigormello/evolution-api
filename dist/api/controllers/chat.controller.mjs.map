{"version":3,"sources":["../../../src/api/controllers/chat.controller.ts"],"sourcesContent":["import {\n  ArchiveChatDto,\n  BlockUserDto,\n  DeleteMessage,\n  getBase64FromMediaMessageDto,\n  MarkChatUnreadDto,\n  NumberDto,\n  PrivacySettingDto,\n  ProfileNameDto,\n  ProfilePictureDto,\n  ProfileStatusDto,\n  ReadMessageDto,\n  SendPresenceDto,\n  UpdateMessageDto,\n  WhatsAppNumberDto,\n} from '@api/dto/chat.dto';\nimport { InstanceDto } from '@api/dto/instance.dto';\nimport { Query } from '@api/repository/repository.service';\nimport { WAMonitoringService } from '@api/services/monitor.service';\nimport { Contact, Message, MessageUpdate } from '@prisma/client';\n\nexport class ChatController {\n  constructor(private readonly waMonitor: WAMonitoringService) {}\n\n  public async whatsappNumber({ instanceName }: InstanceDto, data: WhatsAppNumberDto) {\n    return await this.waMonitor.waInstances[instanceName].whatsappNumber(data);\n  }\n\n  public async readMessage({ instanceName }: InstanceDto, data: ReadMessageDto) {\n    return await this.waMonitor.waInstances[instanceName].markMessageAsRead(data);\n  }\n\n  public async archiveChat({ instanceName }: InstanceDto, data: ArchiveChatDto) {\n    return await this.waMonitor.waInstances[instanceName].archiveChat(data);\n  }\n\n  public async markChatUnread({ instanceName }: InstanceDto, data: MarkChatUnreadDto) {\n    return await this.waMonitor.waInstances[instanceName].markChatUnread(data);\n  }\n\n  public async deleteMessage({ instanceName }: InstanceDto, data: DeleteMessage) {\n    return await this.waMonitor.waInstances[instanceName].deleteMessage(data);\n  }\n\n  public async fetchProfilePicture({ instanceName }: InstanceDto, data: NumberDto) {\n    return await this.waMonitor.waInstances[instanceName].profilePicture(data.number);\n  }\n\n  public async fetchProfile({ instanceName }: InstanceDto, data: NumberDto) {\n    return await this.waMonitor.waInstances[instanceName].fetchProfile(instanceName, data.number);\n  }\n\n  public async fetchContacts({ instanceName }: InstanceDto, query: Query<Contact>) {\n    return await this.waMonitor.waInstances[instanceName].fetchContacts(query);\n  }\n\n  public async getBase64FromMediaMessage({ instanceName }: InstanceDto, data: getBase64FromMediaMessageDto) {\n    return await this.waMonitor.waInstances[instanceName].getBase64FromMediaMessage(data);\n  }\n\n  public async fetchMessages({ instanceName }: InstanceDto, query: Query<Message>) {\n    return await this.waMonitor.waInstances[instanceName].fetchMessages(query);\n  }\n\n  public async fetchStatusMessage({ instanceName }: InstanceDto, query: Query<MessageUpdate>) {\n    return await this.waMonitor.waInstances[instanceName].fetchStatusMessage(query);\n  }\n\n  public async fetchChats({ instanceName }: InstanceDto, query: Query<Contact>) {\n    return await this.waMonitor.waInstances[instanceName].fetchChats(query);\n  }\n\n  public async sendPresence({ instanceName }: InstanceDto, data: SendPresenceDto) {\n    return await this.waMonitor.waInstances[instanceName].sendPresence(data);\n  }\n\n  public async fetchPrivacySettings({ instanceName }: InstanceDto) {\n    return await this.waMonitor.waInstances[instanceName].fetchPrivacySettings();\n  }\n\n  public async updatePrivacySettings({ instanceName }: InstanceDto, data: PrivacySettingDto) {\n    return await this.waMonitor.waInstances[instanceName].updatePrivacySettings(data);\n  }\n\n  public async fetchBusinessProfile({ instanceName }: InstanceDto, data: ProfilePictureDto) {\n    return await this.waMonitor.waInstances[instanceName].fetchBusinessProfile(data.number);\n  }\n\n  public async updateProfileName({ instanceName }: InstanceDto, data: ProfileNameDto) {\n    return await this.waMonitor.waInstances[instanceName].updateProfileName(data.name);\n  }\n\n  public async updateProfileStatus({ instanceName }: InstanceDto, data: ProfileStatusDto) {\n    return await this.waMonitor.waInstances[instanceName].updateProfileStatus(data.status);\n  }\n\n  public async updateProfilePicture({ instanceName }: InstanceDto, data: ProfilePictureDto) {\n    return await this.waMonitor.waInstances[instanceName].updateProfilePicture(data.picture);\n  }\n\n  public async removeProfilePicture({ instanceName }: InstanceDto) {\n    return await this.waMonitor.waInstances[instanceName].removeProfilePicture();\n  }\n\n  public async updateMessage({ instanceName }: InstanceDto, data: UpdateMessageDto) {\n    return await this.waMonitor.waInstances[instanceName].updateMessage(data);\n  }\n\n  public async blockUser({ instanceName }: InstanceDto, data: BlockUserDto) {\n    return await this.waMonitor.waInstances[instanceName].blockUser(data);\n  }\n}\n"],"mappings":"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","names":["ChatController","waMonitor","instanceName","data","query"]}