var i=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var s=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var u=(a,t)=>{for(var n in t)i(a,n,{get:t[n],enumerable:!0})},w=(a,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of s(t))!p.call(a,e)&&e!==n&&i(a,e,{get:()=>t[e],enumerable:!(r=c(t,e))||r.enumerable});return a};var I=a=>w(i({},"__esModule",{value:!0}),a);var G={};u(G,{GroupController:()=>o});module.exports=I(G);var o=class{constructor(t){this.waMonitor=t}async createGroup(t,n){return await this.waMonitor.waInstances[t.instanceName].createGroup(n)}async updateGroupPicture(t,n){return await this.waMonitor.waInstances[t.instanceName].updateGroupPicture(n)}async updateGroupSubject(t,n){return await this.waMonitor.waInstances[t.instanceName].updateGroupSubject(n)}async updateGroupDescription(t,n){return await this.waMonitor.waInstances[t.instanceName].updateGroupDescription(n)}async findGroupInfo(t,n){return await this.waMonitor.waInstances[t.instanceName].findGroup(n)}async fetchAllGroups(t,n){return await this.waMonitor.waInstances[t.instanceName].fetchAllGroups(n)}async inviteCode(t,n){return await this.waMonitor.waInstances[t.instanceName].inviteCode(n)}async inviteInfo(t,n){return await this.waMonitor.waInstances[t.instanceName].inviteInfo(n)}async sendInvite(t,n){return await this.waMonitor.waInstances[t.instanceName].sendInvite(n)}async acceptInviteCode(t,n){return await this.waMonitor.waInstances[t.instanceName].acceptInviteCode(n)}async revokeInviteCode(t,n){return await this.waMonitor.waInstances[t.instanceName].revokeInviteCode(n)}async findParticipants(t,n){return await this.waMonitor.waInstances[t.instanceName].findParticipants(n)}async updateGParticipate(t,n){return await this.waMonitor.waInstances[t.instanceName].updateGParticipant(n)}async updateGSetting(t,n){return await this.waMonitor.waInstances[t.instanceName].updateGSetting(n)}async toggleEphemeral(t,n){return await this.waMonitor.waInstances[t.instanceName].toggleEphemeral(n)}async leaveGroup(t,n){return await this.waMonitor.waInstances[t.instanceName].leaveGroup(n)}};0&&(module.exports={GroupController});
//# sourceMappingURL=group.controller.js.map