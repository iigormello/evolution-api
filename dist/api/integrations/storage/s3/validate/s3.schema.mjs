import s from"crypto";var p=new Uint8Array(256),m=p.length;function a(){return m>p.length-16&&(s.randomFillSync(p),m=0),p.slice(m,m+=16)}var r=[];for(let t=0;t<256;++t)r.push((t+256).toString(16).slice(1));function l(t,e=0){return r[t[e+0]]+r[t[e+1]]+r[t[e+2]]+r[t[e+3]]+"-"+r[t[e+4]]+r[t[e+5]]+"-"+r[t[e+6]]+r[t[e+7]]+"-"+r[t[e+8]]+r[t[e+9]]+"-"+r[t[e+10]]+r[t[e+11]]+r[t[e+12]]+r[t[e+13]]+r[t[e+14]]+r[t[e+15]]}import x from"crypto";var c={randomUUID:x.randomUUID};function g(t,e,n){if(c.randomUUID&&!e&&!t)return c.randomUUID();t=t||{};let i=t.random||(t.rng||a)();if(i[6]=i[6]&15|64,i[8]=i[8]&63|128,e){n=n||0;for(let o=0;o<16;++o)e[n+o]=i[o];return e}return l(i)}var d=g;var u=(...t)=>{let e={};return t.forEach(n=>e[n]={minLength:1,description:`The "${n}" cannot be empty`}),{if:{propertyNames:{enum:[...t]}},then:{properties:e}}},E={$id:d(),type:"object",properties:{id:{type:"string"},type:{type:"string"},messageId:{type:"integer"}},...u("id","type","messageId")},T={$id:d(),type:"object",properties:{id:{type:"string",pattern:"\\d+",minLength:1},expiry:{type:"string",pattern:"\\d+",minLength:1}},...u("id"),required:["id"]};export{E as s3Schema,T as s3UrlSchema};
//# sourceMappingURL=s3.schema.mjs.map