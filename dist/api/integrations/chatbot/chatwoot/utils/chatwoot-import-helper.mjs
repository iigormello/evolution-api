import{isBooleanString as v}from"class-validator";import $ from"dotenv";$.config();var B=class{constructor(){this.loadEnv()}get(e){return this.env[e]}loadEnv(){this.env=this.envProcess(),this.env.PRODUCTION=process.env?.NODE_ENV==="PROD",process.env?.DOCKER_ENV==="true"&&(this.env.SERVER.TYPE=process.env.SERVER_TYPE,this.env.SERVER.PORT=Number.parseInt(process.env.SERVER_PORT)||8080)}envProcess(){return{SERVER:{TYPE:process.env.SERVER_TYPE||"http",PORT:Number.parseInt(process.env.SERVER_PORT)||8080,URL:process.env.SERVER_URL,DISABLE_DOCS:process.env?.SERVER_DISABLE_DOCS==="true",DISABLE_MANAGER:process.env?.SERVER_DISABLE_MANAGER==="true"},CORS:{ORIGIN:process.env.CORS_ORIGIN?.split(",")||["*"],METHODS:process.env.CORS_METHODS?.split(",")||["POST","GET","PUT","DELETE"],CREDENTIALS:process.env?.CORS_CREDENTIALS==="true"},SSL_CONF:{PRIVKEY:process.env?.SSL_CONF_PRIVKEY||"",FULLCHAIN:process.env?.SSL_CONF_FULLCHAIN||""},PROVIDER:{ENABLED:process.env?.PROVIDER_ENABLED==="true",HOST:process.env.PROVIDER_HOST,PORT:process.env?.PROVIDER_PORT||"5656",PREFIX:process.env?.PROVIDER_PREFIX||"evolution"},DATABASE:{CONNECTION:{URI:process.env.DATABASE_CONNECTION_URI||"",CLIENT_NAME:process.env.DATABASE_CONNECTION_CLIENT_NAME||"evolution"},PROVIDER:process.env.DATABASE_PROVIDER||"postgresql",SAVE_DATA:{INSTANCE:process.env?.DATABASE_SAVE_DATA_INSTANCE==="true",NEW_MESSAGE:process.env?.DATABASE_SAVE_DATA_NEW_MESSAGE==="true",MESSAGE_UPDATE:process.env?.DATABASE_SAVE_MESSAGE_UPDATE==="true",CONTACTS:process.env?.DATABASE_SAVE_DATA_CONTACTS==="true",CHATS:process.env?.DATABASE_SAVE_DATA_CHATS==="true",HISTORIC:process.env?.DATABASE_SAVE_DATA_HISTORIC==="true",LABELS:process.env?.DATABASE_SAVE_DATA_LABELS==="true",IS_ON_WHATSAPP:process.env?.DATABASE_SAVE_IS_ON_WHATSAPP==="true",IS_ON_WHATSAPP_DAYS:Number.parseInt(process.env?.DATABASE_SAVE_IS_ON_WHATSAPP_DAYS??"7")},DELETE_DATA:{LOGICAL_MESSAGE_DELETE:process.env?.DATABASE_DELETE_MESSAGE==="true"}},RABBITMQ:{ENABLED:process.env?.RABBITMQ_ENABLED==="true",GLOBAL_ENABLED:process.env?.RABBITMQ_GLOBAL_ENABLED==="true",PREFIX_KEY:process.env?.RABBITMQ_PREFIX_KEY||"evolution",EXCHANGE_NAME:process.env?.RABBITMQ_EXCHANGE_NAME||"evolution_exchange",URI:process.env.RABBITMQ_URI||"",EVENTS:{APPLICATION_STARTUP:process.env?.RABBITMQ_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.RABBITMQ_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.RABBITMQ_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.RABBITMQ_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.RABBITMQ_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.RABBITMQ_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.RABBITMQ_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.RABBITMQ_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.RABBITMQ_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.RABBITMQ_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.RABBITMQ_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.RABBITMQ_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.RABBITMQ_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.RABBITMQ_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.RABBITMQ_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.RABBITMQ_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.RABBITMQ_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.RABBITMQ_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.RABBITMQ_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.RABBITMQ_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.RABBITMQ_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.RABBITMQ_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.RABBITMQ_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.RABBITMQ_EVENTS_CALL==="true",TYPEBOT_START:process.env?.RABBITMQ_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},SQS:{ENABLED:process.env?.SQS_ENABLED==="true",ACCESS_KEY_ID:process.env.SQS_ACCESS_KEY_ID||"",SECRET_ACCESS_KEY:process.env.SQS_SECRET_ACCESS_KEY||"",ACCOUNT_ID:process.env.SQS_ACCOUNT_ID||"",REGION:process.env.SQS_REGION||""},WEBSOCKET:{ENABLED:process.env?.WEBSOCKET_ENABLED==="true",GLOBAL_EVENTS:process.env?.WEBSOCKET_GLOBAL_EVENTS==="true"},PUSHER:{ENABLED:process.env?.PUSHER_ENABLED==="true",GLOBAL:{ENABLED:process.env?.PUSHER_GLOBAL_ENABLED==="true",APP_ID:process.env?.PUSHER_GLOBAL_APP_ID||"",KEY:process.env?.PUSHER_GLOBAL_KEY||"",SECRET:process.env?.PUSHER_GLOBAL_SECRET||"",CLUSTER:process.env?.PUSHER_GLOBAL_CLUSTER||"",USE_TLS:process.env?.PUSHER_GLOBAL_USE_TLS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.PUSHER_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.PUSHER_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.PUSHER_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.PUSHER_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.PUSHER_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.PUSHER_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.PUSHER_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.PUSHER_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.PUSHER_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.PUSHER_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.PUSHER_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.PUSHER_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.PUSHER_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.PUSHER_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.PUSHER_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.PUSHER_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.PUSHER_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.PUSHER_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.PUSHER_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.PUSHER_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.PUSHER_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.PUSHER_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.PUSHER_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.PUSHER_EVENTS_CALL==="true",TYPEBOT_START:process.env?.PUSHER_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},WA_BUSINESS:{TOKEN_WEBHOOK:process.env.WA_BUSINESS_TOKEN_WEBHOOK||"evolution",URL:process.env.WA_BUSINESS_URL||"https://graph.facebook.com",VERSION:process.env.WA_BUSINESS_VERSION||"v18.0",LANGUAGE:process.env.WA_BUSINESS_LANGUAGE||"en"},LOG:{LEVEL:process.env?.LOG_LEVEL?.split(",")||["ERROR","WARN","DEBUG","INFO","LOG","VERBOSE","DARK","WEBHOOKS","WEBSOCKET"],COLOR:process.env?.LOG_COLOR==="true",BAILEYS:process.env?.LOG_BAILEYS||"error"},DEL_INSTANCE:v(process.env?.DEL_INSTANCE)?process.env.DEL_INSTANCE==="true":Number.parseInt(process.env.DEL_INSTANCE)||!1,DEL_TEMP_INSTANCES:v(process.env?.DEL_TEMP_INSTANCES)?process.env.DEL_TEMP_INSTANCES==="true":!0,LANGUAGE:process.env?.LANGUAGE||"en",WEBHOOK:{GLOBAL:{URL:process.env?.WEBHOOK_GLOBAL_URL||"",ENABLED:process.env?.WEBHOOK_GLOBAL_ENABLED==="true",WEBHOOK_BY_EVENTS:process.env?.WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.WEBHOOK_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.WEBHOOK_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.WEBHOOK_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.WEBHOOK_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.WEBHOOK_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.WEBHOOK_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.WEBHOOK_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.WEBHOOK_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.WEBHOOK_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.WEBHOOK_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.WEBHOOK_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.WEBHOOK_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.WEBHOOK_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.WEBHOOK_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.WEBHOOK_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.WEBHOOK_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.WEBHOOK_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.WEBHOOK_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.WEBHOOK_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.WEBHOOK_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.WEBHOOK_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.WEBHOOK_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.WEBHOOK_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.WEBHOOK_EVENTS_CALL==="true",TYPEBOT_START:process.env?.WEBHOOK_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS==="true",ERRORS:process.env?.WEBHOOK_EVENTS_ERRORS==="true",ERRORS_WEBHOOK:process.env?.WEBHOOK_EVENTS_ERRORS_WEBHOOK||""}},CONFIG_SESSION_PHONE:{CLIENT:process.env?.CONFIG_SESSION_PHONE_CLIENT||"Evolution API",NAME:process.env?.CONFIG_SESSION_PHONE_NAME||"Chrome",VERSION:process.env?.CONFIG_SESSION_PHONE_VERSION||null},QRCODE:{LIMIT:Number.parseInt(process.env.QRCODE_LIMIT)||30,COLOR:process.env.QRCODE_COLOR||"#198754"},TYPEBOT:{ENABLED:process.env?.TYPEBOT_ENABLED==="true",API_VERSION:process.env?.TYPEBOT_API_VERSION||"old",SEND_MEDIA_BASE64:process.env?.TYPEBOT_SEND_MEDIA_BASE64==="true"},CHATWOOT:{ENABLED:process.env?.CHATWOOT_ENABLED==="true",MESSAGE_DELETE:process.env.CHATWOOT_MESSAGE_DELETE==="true",MESSAGE_READ:process.env.CHATWOOT_MESSAGE_READ==="true",BOT_CONTACT:!process.env.CHATWOOT_BOT_CONTACT||process.env.CHATWOOT_BOT_CONTACT==="true",IMPORT:{DATABASE:{CONNECTION:{URI:process.env.CHATWOOT_IMPORT_DATABASE_CONNECTION_URI||""}},PLACEHOLDER_MEDIA_MESSAGE:process.env?.CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE==="true"}},OPENAI:{ENABLED:process.env?.OPENAI_ENABLED==="true",API_KEY_GLOBAL:process.env?.OPENAI_API_KEY_GLOBAL||null},DIFY:{ENABLED:process.env?.DIFY_ENABLED==="true"},CACHE:{REDIS:{ENABLED:process.env?.CACHE_REDIS_ENABLED==="true",URI:process.env?.CACHE_REDIS_URI||"",PREFIX_KEY:process.env?.CACHE_REDIS_PREFIX_KEY||"evolution-cache",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||604800,SAVE_INSTANCES:process.env?.CACHE_REDIS_SAVE_INSTANCES==="true"},LOCAL:{ENABLED:process.env?.CACHE_LOCAL_ENABLED==="true",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||86400}},S3:{ACCESS_KEY:process.env?.S3_ACCESS_KEY,SECRET_KEY:process.env?.S3_SECRET_KEY,ENDPOINT:process.env?.S3_ENDPOINT,BUCKET_NAME:process.env?.S3_BUCKET,ENABLE:process.env?.S3_ENABLED==="true",PORT:Number.parseInt(process.env?.S3_PORT||"9000"),USE_SSL:process.env?.S3_USE_SSL==="true",REGION:process.env?.S3_REGION},AUTHENTICATION:{API_KEY:{KEY:process.env.AUTHENTICATION_API_KEY||"BQYHJGJHJ"},EXPOSE_IN_FETCH_INSTANCES:process.env?.AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES==="true"}}}},R=new B;import Y from"dayjs";import F from"fs";var Q=JSON.parse(F.readFileSync("./package.json","utf8")),H=l=>Y(l).toDate().toString().replace(/\sGMT.+/,""),N=(t=>(t.LOG="\x1B[32m",t.INFO="\x1B[34m",t.WARN="\x1B[33m",t.ERROR="\x1B[31m",t.DEBUG="\x1B[36m",t.VERBOSE="\x1B[37m",t.DARK="\x1B[30m",t))(N||{});var G=(t=>(t.LOG="\x1B[32m%s\x1B[0m",t.DARK="\x1B[30m%s\x1B[0m",t.INFO="\x1B[34m%s\x1B[0m",t.WARN="\x1B[33m%s\x1B[0m",t.ERROR="\x1B[31m%s\x1B[0m",t.DEBUG="\x1B[36m%s\x1B[0m",t.VERBOSE="\x1B[37m%s\x1B[0m",t))(G||{}),y=(t=>(t.LOG="LOG",t.WARN="WARN",t.INFO="INFO",t.DARK="DARK",t.ERROR="ERROR",t.DEBUG="DEBUG",t.VERBOSE="VERBOSE",t))(y||{}),V=(t=>(t.LOG="\x1B[42m",t.INFO="\x1B[44m",t.WARN="\x1B[43m",t.DARK="\x1B[40m",t.ERROR="\x1B[41m",t.DEBUG="\x1B[46m",t.VERBOSE="\x1B[47m",t))(V||{}),D=class{constructor(e="Logger"){this.configService=R;this.instance=null;this.context=e}setContext(e){this.context=e}setInstance(e){this.instance=e}console(e,E){let o=[];this.configService.get("LOG").LEVEL.forEach(_=>o.push(y[_]));let s=typeof e;o.includes(E)&&(R.get("LOG").COLOR?(console.log("\x1B[1m"+G[E],"[Evolution API]","\x1B[1m"+N[E],this.instance?`[${this.instance}]`:"","\x1B[1m"+N[E],`v${Q.version}`,"\x1B[1m"+N[E],process.pid.toString(),"\x1B[0m","\x1B[1m"+N[E],"-","\x1B[1m\x1B[37m",`${H(Date.now())}  `,"\x1B[0m",N[E]+V[E]+"\x1B[1m",`${E} \x1B[0m`,"\x1B[33m\x1B[1m",`[${this.context}]\x1B[0m`,N[E]+"\x1B[1m",`[${s}]\x1B[0m`,N[E],s!=="object"?e:"","\x1B[0m"),s==="object"&&console.log(e,`
`)):console.log("[Evolution API]",this.instance?`[${this.instance}]`:"",process.pid.toString(),"-",`${H(Date.now())}  `,`${E} `,`[${this.context}]`,`[${s}]`,e))}log(e){this.console(e,"LOG")}info(e){this.console(e,"INFO")}warn(e){this.console(e,"WARN")}error(e){this.console(e,"ERROR")}verbose(e){this.console(e,"VERBOSE")}debug(e){this.console(e,"DEBUG")}dark(e){this.console(e,"DARK")}};import k from"pg";var{Pool:q}=k,d=class{constructor(){this.logger=new D("Postgres");this.connected=!1}getConnection(e){if(this.connected)return this.pool;this.pool=new q({connectionString:e,ssl:{rejectUnauthorized:!1}}),this.pool.on("error",()=>{this.logger.error("postgres disconnected"),this.connected=!1});try{this.connected=!0}catch(E){return this.connected=!1,this.logger.error("postgres connect exception caught: "+E),null}return this.pool}getChatwootConnection(){let e=R.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return this.getConnection(e)}},C=new d;var m=class{constructor(){this.logger=new D("ChatwootImport");this.repositoryMessagesCache=new Map;this.historyMessages=new Map;this.historyContacts=new Map}getRepositoryMessagesCache(e){return this.repositoryMessagesCache.has(e.instanceName)?this.repositoryMessagesCache.get(e.instanceName):null}setRepositoryMessagesCache(e,E){this.repositoryMessagesCache.set(e.instanceName,E)}deleteRepositoryMessagesCache(e){this.repositoryMessagesCache.delete(e.instanceName)}addHistoryMessages(e,E){let o=this.historyMessages.has(e.instanceName)?this.historyMessages.get(e.instanceName):[];this.historyMessages.set(e.instanceName,[...o,...E])}addHistoryContacts(e,E){let o=this.historyContacts.has(e.instanceName)?this.historyContacts.get(e.instanceName):[];this.historyContacts.set(e.instanceName,o.concat(E))}deleteHistoryMessages(e){this.historyMessages.delete(e.instanceName)}deleteHistoryContacts(e){this.historyContacts.delete(e.instanceName)}clearAll(e){this.deleteRepositoryMessagesCache(e),this.deleteHistoryMessages(e),this.deleteHistoryContacts(e)}getHistoryMessagesLenght(e){return this.historyMessages.get(e.instanceName)?.length??0}async importHistoryContacts(e,E){try{if(this.getHistoryMessagesLenght(e)>0)return;let o=C.getChatwootConnection(),s=0,_=this.historyContacts.get(e.instanceName)||[];if(_.length===0)return 0;let n=this.sliceIntoChunks(_,3e3);for(;n.length>0;){let t=`SELECT id FROM labels WHERE title = '${E.nameInbox}' AND account_id = ${E.accountId} LIMIT 1`,A=(await o.query(t))?.rows[0]?.id;if(!A){let a=`INSERT INTO labels (title, color, show_on_sidebar, account_id, created_at, updated_at) VALUES ('${E.nameInbox}', '#34039B', true, ${E.accountId}, NOW(), NOW()) RETURNING id`;A=(await o.query(a))?.rows[0]?.id}let i=`INSERT INTO contacts
          (name, phone_number, account_id, identifier, created_at, updated_at) VALUES `,T=[E.accountId];for(let a of n){T.push(a.pushName);let c=`$${T.length}`;T.push(`+${a.remoteJid.split("@")[0]}`);let S=`$${T.length}`;T.push(a.remoteJid);let P=`$${T.length}`;i+=`(${c}, ${S}, $1, ${P}, NOW(), NOW()),`}i.slice(-1)===","&&(i=i.slice(0,-1)),i+=` ON CONFLICT (identifier, account_id)
                       DO UPDATE SET
                        name = EXCLUDED.name,
                        phone_number = EXCLUDED.phone_number,
                        identifier = EXCLUDED.identifier`,s+=(await o.query(i,T))?.rowCount??0;let p=`SELECT id FROM tags WHERE name = '${E.nameInbox}' LIMIT 1`,u=(await o.query(p))?.rows[0]?.id,L=`INSERT INTO tags (name, taggings_count) VALUES ('${E.nameInbox}', ${s}) ON CONFLICT (name) DO UPDATE SET taggings_count = tags.taggings_count + ${s} RETURNING id`;u=(await o.query(L))?.rows[0]?.id,await o.query(L);let r="INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) VALUES ";n.forEach(a=>{let c=`(SELECT id FROM contacts WHERE identifier = '${a.remoteJid}' AND account_id = ${E.accountId})`;r+=`($1, $2, ${c}, $3, NOW()),`}),r.slice(-1)===","&&(r=r.slice(0,-1)),await o.query(r,[u,"Contact","labels"]),n=this.sliceIntoChunks(_,3e3)}return this.deleteHistoryContacts(e),s}catch(o){this.logger.error(`Error on import history contacts: ${o.toString()}`)}}async getExistingSourceIds(e){try{let E=new Set;if(e.length===0)return E;let o=e.map(t=>`WAID:${t.replace("WAID:","")}`),n=await C.getChatwootConnection().query("SELECT source_id FROM messages WHERE source_id = ANY($1)",[o]);for(let t of n.rows)E.add(t.source_id);return E}catch{return null}}async importHistoryMessages(e,E,o,s){try{let _=C.getChatwootConnection(),n=await this.getChatwootUser(s);if(!n)throw new Error("User not found to import messages.");let t=0,A=this.historyMessages.get(e.instanceName)||[];if(A.length===0)return 0;A.sort((r,a)=>{let c=r.key,S=a.key,P=r.messageTimestamp,b=a.messageTimestamp;return parseInt(c.remoteJid)-parseInt(S.remoteJid)||P-b});let i=this.createMessagesMapByPhoneNumber(A),T=new Map;i.forEach((r,a)=>{T.set(a,{first:r[0]?.messageTimestamp,last:r[r.length-1]?.messageTimestamp})});let p=await this.getExistingSourceIds(A.map(r=>r.key.id));A=A.filter(r=>!p.has(r.key.id));let I=4e3,u=this.sliceIntoChunks(A,I);for(;u.length>0;){let r=this.createMessagesMapByPhoneNumber(u);if(r.size>0){let a=await this.selectOrCreateFksFromChatwoot(s,o,T,r),c=`INSERT INTO messages
            (content, processed_message_content, account_id, inbox_id, conversation_id, message_type, private, content_type,
            sender_type, sender_id, source_id, created_at, updated_at) VALUES `,S=[s.accountId,o.id];r.forEach((P,b)=>{let g=a.get(b);P.forEach(O=>{if(!O.message||!g?.conversation_id||!g?.contact_id)return;let h=this.getContentMessage(E,O);if(!h)return;S.push(h);let U=`$${S.length}`;S.push(g.conversation_id);let W=`$${S.length}`;S.push(O.key.fromMe?"1":"0");let f=`$${S.length}`;S.push(O.key.fromMe?n.user_type:"Contact");let w=`$${S.length}`;S.push(O.key.fromMe?n.user_id:g.contact_id);let x=`$${S.length}`;S.push("WAID:"+O.key.id);let K=`$${S.length}`;S.push(O.messageTimestamp);let M=`$${S.length}`;c+=`(${U}, ${U}, $1, $2, ${W}, ${f}, FALSE, 0,
                  ${w},${x},${K}, to_timestamp(${M}), to_timestamp(${M})),`})}),S.length>2&&(c.slice(-1)===","&&(c=c.slice(0,-1)),t+=(await _.query(c,S))?.rowCount??0)}u=this.sliceIntoChunks(A,I)}this.deleteHistoryMessages(e),this.deleteRepositoryMessagesCache(e);let L={...s,ignoreJids:Array.isArray(s.ignoreJids)?s.ignoreJids.map(r=>String(r)):[]};return this.importHistoryContacts(e,L),t}catch(_){this.logger.error(`Error on import history messages: ${_.toString()}`),this.deleteHistoryMessages(e),this.deleteRepositoryMessagesCache(e)}}async selectOrCreateFksFromChatwoot(e,E,o,s){let _=C.getChatwootConnection(),n=[e.accountId,E.id],A=`WITH
              phone_number AS (
                SELECT phone_number, created_at::INTEGER, last_activity_at::INTEGER FROM (
                  VALUES 
                   ${Array.from(s.keys()).map(T=>{let p=o.get(T);if(p){n.push(T);let I=`($${n.length},`;return n.push(p.first),I+=`$${n.length},`,n.push(p.last),`${I}$${n.length})`}}).join(",")}
                 ) as t (phone_number, created_at, last_activity_at)
              ),

              only_new_phone_number AS (
                SELECT * FROM phone_number
                WHERE phone_number NOT IN (
                  SELECT phone_number
                  FROM contacts
                    JOIN contact_inboxes ci ON ci.contact_id = contacts.id AND ci.inbox_id = $2
                    JOIN conversations con ON con.contact_inbox_id = ci.id 
                      AND con.account_id = $1
                      AND con.inbox_id = $2
                      AND con.contact_id = contacts.id
                  WHERE contacts.account_id = $1
                )
              ),

              new_contact AS (
                INSERT INTO contacts (name, phone_number, account_id, identifier, created_at, updated_at)
                SELECT REPLACE(p.phone_number, '+', ''), p.phone_number, $1, CONCAT(REPLACE(p.phone_number, '+', ''),
                  '@s.whatsapp.net'), to_timestamp(p.created_at), to_timestamp(p.last_activity_at)
                FROM only_new_phone_number AS p
                ON CONFLICT(identifier, account_id) DO UPDATE SET updated_at = EXCLUDED.updated_at
                RETURNING id, phone_number, created_at, updated_at
              ),

              new_contact_inbox AS (
                INSERT INTO contact_inboxes (contact_id, inbox_id, source_id, created_at, updated_at)
                SELECT new_contact.id, $2, gen_random_uuid(), new_contact.created_at, new_contact.updated_at
                FROM new_contact 
                RETURNING id, contact_id, created_at, updated_at
              ),

              new_conversation AS (
                INSERT INTO conversations (account_id, inbox_id, status, contact_id,
                  contact_inbox_id, uuid, last_activity_at, created_at, updated_at)
                SELECT $1, $2, 0, new_contact_inbox.contact_id, new_contact_inbox.id, gen_random_uuid(),
                  new_contact_inbox.updated_at, new_contact_inbox.created_at, new_contact_inbox.updated_at
                FROM new_contact_inbox
                RETURNING id, contact_id
              )

              SELECT new_contact.phone_number, new_conversation.contact_id, new_conversation.id AS conversation_id
              FROM new_conversation 
              JOIN new_contact ON new_conversation.contact_id = new_contact.id

              UNION

              SELECT p.phone_number, c.id contact_id, con.id conversation_id
                FROM phone_number p
              JOIN contacts c ON c.phone_number = p.phone_number
              JOIN contact_inboxes ci ON ci.contact_id = c.id AND ci.inbox_id = $2
              JOIN conversations con ON con.contact_inbox_id = ci.id AND con.account_id = $1
                AND con.inbox_id = $2 AND con.contact_id = c.id`,i=await _.query(A,n);return new Map(i.rows.map(T=>[T.phone_number,T]))}async getChatwootUser(e){try{return(await C.getChatwootConnection().query(`SELECT owner_type AS user_type, owner_id AS user_id
                         FROM access_tokens
                       WHERE token = $1`,[e.token]))?.rows[0]||!1}catch(E){this.logger.error(`Error on getChatwootUser: ${E.toString()}`)}}createMessagesMapByPhoneNumber(e){return e.reduce((E,o)=>{let s=o?.key;if(!this.isIgnorePhoneNumber(s?.remoteJid)){let _=s?.remoteJid?.split("@")[0];if(_){let n=`+${_}`,t=E.has(n)?E.get(n):[];t.push(o),E.set(n,t)}}return E},new Map)}async getContactsOrderByRecentConversations(e,E,o=50){try{return(await C.getChatwootConnection().query(`SELECT contacts.id, contacts.identifier, contacts.phone_number
                     FROM conversations
                   JOIN contacts ON contacts.id = conversations.contact_id
                   WHERE conversations.account_id = $1
                     AND inbox_id = $2
                   ORDER BY conversations.last_activity_at DESC
                   LIMIT $3`,[E.accountId,e.id,o]))?.rows}catch(s){this.logger.error(`Error on get recent conversations: ${s.toString()}`)}}getContentMessage(e,E){let o=e.getConversationMessage(E.message);if(o)return o;if(!R.get("CHATWOOT").IMPORT.PLACEHOLDER_MEDIA_MESSAGE)return"";let s={documentMessage:E.message.documentMessage,documentWithCaptionMessage:E.message.documentWithCaptionMessage?.message?.documentMessage,imageMessage:E.message.imageMessage,videoMessage:E.message.videoMessage,audioMessage:E.message.audioMessage,stickerMessage:E.message.stickerMessage,templateMessage:E.message.templateMessage?.hydratedTemplate?.hydratedContentText};switch(Object.keys(s).find(n=>s[n]!==void 0)){case"documentMessage":return`_<File: ${E.message.documentMessage.fileName}${E.message.documentMessage.caption?` ${E.message.documentMessage.caption}`:""}>_`;case"documentWithCaptionMessage":return`_<File: ${E.message.documentWithCaptionMessage.message.documentMessage.fileName}${E.message.documentWithCaptionMessage.message.documentMessage.caption?` ${E.message.documentWithCaptionMessage.message.documentMessage.caption}`:""}>_`;case"templateMessage":return E.message.templateMessage.hydratedTemplate.hydratedTitleText?`*${E.message.templateMessage.hydratedTemplate.hydratedTitleText}*\\n`:""+E.message.templateMessage.hydratedTemplate.hydratedContentText;case"imageMessage":return"_<Image Message>_";case"videoMessage":return"_<Video Message>_";case"audioMessage":return"_<Audio Message>_";case"stickerMessage":return"_<Sticker Message>_";default:return""}}sliceIntoChunks(e,E){return e.splice(0,E)}isGroup(e){return e.includes("@g.us")}isIgnorePhoneNumber(e){return this.isGroup(e)||e==="status@broadcast"||e==="0@s.whatsapp.net"}updateMessageSourceID(e,E){return C.getChatwootConnection().query("UPDATE messages SET source_id = $1, status = 0, created_at = NOW(), updated_at = NOW() WHERE id = $2;",[`WAID:${E}`,e])}},ce=new m;export{ce as chatwootImport};
//# sourceMappingURL=chatwoot-import-helper.mjs.map