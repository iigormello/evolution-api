var f=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var y=(a,o)=>{for(var l in o)f(a,l,{get:o[l],enumerable:!0})},m=(a,o,l,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of d(o))!v.call(a,t)&&t!==l&&f(a,t,{get:()=>o[t],enumerable:!(n=S(o,t))||n.enumerable});return a};var h=a=>m(f({},"__esModule",{value:!0}),a);var C={};y(C,{useVoiceCallsBaileys:()=>w});module.exports=h(C);var u=require("socket.io-client"),p="close",w=async(a,o,l,n)=>{p=l??"close";let t=(0,u.io)("https://devices.wavoip.com/baileys",{transports:["websocket"],path:`/${a}/websocket`});return t.on("connect",()=>{n&&console.log("[*] - Wavoip connected",t.id),t.emit("init",o.authState.creds.me,o.authState.creds.account,p)}),t.on("disconnect",()=>{n&&console.log("[*] - Wavoip disconnect")}),t.on("connect_error",e=>{t.active?n&&console.log("[*] - Wavoip connection error temporary failure, the socket will automatically try to reconnect",e):n&&console.log("[*] - Wavoip connection error",e.message)}),t.on("onWhatsApp",async(e,c)=>{try{let s=await o.onWhatsApp(e);c(s),n&&console.log("[*] Success on call onWhatsApp function",s,e)}catch(s){n&&console.error("[*] Error on call onWhatsApp function",s)}}),t.on("profilePictureUrl",async(e,c,s,i)=>{try{let r=await o.profilePictureUrl(e,c,s);i(r),n&&console.log("[*] Success on call profilePictureUrl function",r)}catch(r){n&&console.error("[*] Error on call profilePictureUrl function",r)}}),t.on("assertSessions",async(e,c,s)=>{try{let i=await o.assertSessions(e,c);s(i),n&&console.log("[*] Success on call assertSessions function",i)}catch(i){n&&console.error("[*] Error on call assertSessions function",i)}}),t.on("createParticipantNodes",async(e,c,s,i)=>{try{let r=await o.createParticipantNodes(e,c,s);i(r,!0),n&&console.log("[*] Success on call createParticipantNodes function",r)}catch(r){n&&console.error("[*] Error on call createParticipantNodes function",r)}}),t.on("getUSyncDevices",async(e,c,s,i)=>{try{let r=await o.getUSyncDevices(e,c,s);i(r),n&&console.log("[*] Success on call getUSyncDevices function",r)}catch(r){n&&console.error("[*] Error on call getUSyncDevices function",r)}}),t.on("generateMessageTag",async e=>{try{let c=await o.generateMessageTag();e(c),n&&console.log("[*] Success on call generateMessageTag function",c)}catch(c){n&&console.error("[*] Error on call generateMessageTag function",c)}}),t.on("sendNode",async(e,c)=>{try{console.log("sendNode",JSON.stringify(e));let s=await o.sendNode(e);c(!0),n&&console.log("[*] Success on call sendNode function",s)}catch(s){n&&console.error("[*] Error on call sendNode function",s)}}),t.on("signalRepository:decryptMessage",async(e,c,s,i)=>{try{let r=await o.signalRepository.decryptMessage({jid:e,type:c,ciphertext:s});i(r),n&&console.log("[*] Success on call signalRepository:decryptMessage function",r)}catch(r){n&&console.error("[*] Error on call signalRepository:decryptMessage function",r)}}),o.ev.on("connection.update",e=>{let{connection:c}=e;c&&(p=c,t.timeout(1e3).emit("connection.update:status",o.authState.creds.me,o.authState.creds.account,c)),e.qr&&t.timeout(1e3).emit("connection.update:qr",e.qr)}),o.ws.on("CB:call",e=>{n&&console.log("[*] Signling received"),t.volatile.timeout(1e3).emit("CB:call",e)}),o.ws.on("CB:ack,class:call",e=>{n&&console.log("[*] Signling ack received"),t.volatile.timeout(1e3).emit("CB:ack,class:call",e)}),t};0&&(module.exports={useVoiceCallsBaileys});
//# sourceMappingURL=useVoiceCallsBaileys.js.map