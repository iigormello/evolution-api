{"version":3,"sources":["../../../../../../src/api/integrations/channel/whatsapp/voiceCalls/transport.type.ts"],"sourcesContent":["import { BinaryNode, Contact, JidWithDevice, proto, WAConnectionState } from 'baileys';\n\nexport interface ServerToClientEvents {\n  withAck: (d: string, callback: (e: number) => void) => void;\n  onWhatsApp: onWhatsAppType;\n  profilePictureUrl: ProfilePictureUrlType;\n  assertSessions: AssertSessionsType;\n  createParticipantNodes: CreateParticipantNodesType;\n  getUSyncDevices: GetUSyncDevicesType;\n  generateMessageTag: GenerateMessageTagType;\n  sendNode: SendNodeType;\n  'signalRepository:decryptMessage': SignalRepositoryDecryptMessageType;\n}\n\nexport interface ClientToServerEvents {\n  init: (\n    me: Contact | undefined,\n    account: proto.IADVSignedDeviceIdentity | undefined,\n    status: WAConnectionState,\n  ) => void;\n  'CB:call': (packet: any) => void;\n  'CB:ack,class:call': (packet: any) => void;\n  'connection.update:status': (\n    me: Contact | undefined,\n    account: proto.IADVSignedDeviceIdentity | undefined,\n    status: WAConnectionState,\n  ) => void;\n  'connection.update:qr': (qr: string) => void;\n}\n\nexport type onWhatsAppType = (jid: string, callback: onWhatsAppCallback) => void;\nexport type onWhatsAppCallback = (\n  response: {\n    exists: boolean;\n    jid: string;\n  }[],\n) => void;\n\nexport type ProfilePictureUrlType = (\n  jid: string,\n  type: 'image' | 'preview',\n  timeoutMs: number | undefined,\n  callback: ProfilePictureUrlCallback,\n) => void;\nexport type ProfilePictureUrlCallback = (response: string | undefined) => void;\n\nexport type AssertSessionsType = (jids: string[], force: boolean, callback: AssertSessionsCallback) => void;\nexport type AssertSessionsCallback = (response: boolean) => void;\n\nexport type CreateParticipantNodesType = (\n  jids: string[],\n  message: any,\n  extraAttrs: any,\n  callback: CreateParticipantNodesCallback,\n) => void;\nexport type CreateParticipantNodesCallback = (nodes: any, shouldIncludeDeviceIdentity: boolean) => void;\n\nexport type GetUSyncDevicesType = (\n  jids: string[],\n  useCache: boolean,\n  ignoreZeroDevices: boolean,\n  callback: GetUSyncDevicesTypeCallback,\n) => void;\nexport type GetUSyncDevicesTypeCallback = (jids: JidWithDevice[]) => void;\n\nexport type GenerateMessageTagType = (callback: GenerateMessageTagTypeCallback) => void;\nexport type GenerateMessageTagTypeCallback = (response: string) => void;\n\nexport type SendNodeType = (stanza: BinaryNode, callback: SendNodeTypeCallback) => void;\nexport type SendNodeTypeCallback = (response: boolean) => void;\n\nexport type SignalRepositoryDecryptMessageType = (\n  jid: string,\n  type: 'pkmsg' | 'msg',\n  ciphertext: Buffer,\n  callback: SignalRepositoryDecryptMessageCallback,\n) => void;\nexport type SignalRepositoryDecryptMessageCallback = (response: any) => void;\n"],"mappings":"kWAAA,IAAAA,EAAA,kBAAAC,EAAAD","names":["transport_type_exports","__toCommonJS"]}