var i=class i{constructor(t,e,s,r){this.prisma=t,this.monitor=e,this.status=s,this.name=r}set prisma(t){this.prismaRepository=t}get prisma(){return this.prismaRepository}set monitor(t){this.waMonitor=t}get monitor(){return this.waMonitor}set name(t){this.integrationName=t}get name(){return this.integrationName}set status(t){this.integrationStatus=t}get status(){return this.integrationStatus}async set(t,e){if(this.status)return e[this.name]?.enabled?e[this.name].events.length===0&&(e[this.name].events=i.events):e[this.name].events=[],this.prisma[this.name].upsert({where:{instanceId:this.monitor.waInstances[t].instanceId},update:{enabled:e[this.name]?.enabled,events:e[this.name].events},create:{enabled:e[this.name]?.enabled,events:e[this.name].events,instanceId:this.monitor.waInstances[t].instanceId}})}async get(t){if(!this.status)return;if(this.monitor.waInstances[t]===void 0)return null;let e=await this.prisma[this.name].findUnique({where:{instanceId:this.monitor.waInstances[t].instanceId}});return e||null}};i.events=["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS","REMOVE_INSTANCE","LOGOUT_INSTANCE"];var n=i;export{n as EventController};
//# sourceMappingURL=event.controller.mjs.map