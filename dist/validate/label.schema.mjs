import c from"crypto";var a=new Uint8Array(256),m=a.length;function d(){return m>a.length-16&&(c.randomFillSync(a),m=0),a.slice(m,m+=16)}var n=[];for(let t=0;t<256;++t)n.push((t+256).toString(16).slice(1));function u(t,e=0){return n[t[e+0]]+n[t[e+1]]+n[t[e+2]]+n[t[e+3]]+"-"+n[t[e+4]]+n[t[e+5]]+"-"+n[t[e+6]]+n[t[e+7]]+"-"+n[t[e+8]]+n[t[e+9]]+"-"+n[t[e+10]]+n[t[e+11]]+n[t[e+12]]+n[t[e+13]]+n[t[e+14]]+n[t[e+15]]}import x from"crypto";var l={randomUUID:x.randomUUID};function f(t,e,r){if(l.randomUUID&&!e&&!t)return l.randomUUID();t=t||{};let i=t.random||(t.rng||d)();if(i[6]=i[6]&15|64,i[8]=i[8]&63|128,e){r=r||0;for(let o=0;o<16;++o)e[r+o]=i[o];return e}return u(i)}var p=f;var s=(...t)=>{let e={};return t.forEach(r=>e[r]={minLength:1,description:`The "${r}" cannot be empty`}),{if:{propertyNames:{enum:[...t]}},then:{properties:e}}},g={type:"string",description:"Invalid format"},L={$id:p(),type:"object",properties:{number:{...g},labelId:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["number","labelId","action"],...s("number","labelId","action")};export{L as handleLabelSchema};
//# sourceMappingURL=label.schema.mjs.map