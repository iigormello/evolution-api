{"version":3,"sources":["../../node_modules/uuid/dist/esm-node/rng.js","../../node_modules/uuid/dist/esm-node/stringify.js","../../node_modules/uuid/dist/esm-node/native.js","../../node_modules/uuid/dist/esm-node/v4.js","../../src/validate/chat.schema.ts"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\nimport { v4 } from 'uuid';\n\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\n  const properties = {};\n  propertyNames.forEach(\n    (property) =>\n      (properties[property] = {\n        minLength: 1,\n        description: `The \"${property}\" cannot be empty`,\n      }),\n  );\n  return {\n    if: {\n      propertyNames: {\n        enum: [...propertyNames],\n      },\n    },\n    then: { properties },\n  };\n};\n\nconst numberDefinition: JSONSchema7Definition = {\n  type: 'string',\n  description: 'Invalid format',\n};\n\nexport const whatsappNumberSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    numbers: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n      items: {\n        type: 'string',\n        description: '\"numbers\" must be an array of numeric strings',\n      },\n    },\n  },\n};\n\nexport const readMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    readMessages: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n      items: {\n        properties: {\n          id: { type: 'string' },\n          fromMe: { type: 'boolean', enum: [true, false] },\n          remoteJid: { type: 'string' },\n        },\n        required: ['id', 'fromMe', 'remoteJid'],\n        ...isNotEmpty('id', 'remoteJid'),\n      },\n    },\n  },\n  required: ['readMessages'],\n};\n\nexport const archiveChatSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    chat: { type: 'string' },\n    lastMessage: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'object',\n          properties: {\n            id: { type: 'string' },\n            remoteJid: { type: 'string' },\n            fromMe: { type: 'boolean', enum: [true, false] },\n          },\n          required: ['id', 'fromMe', 'remoteJid'],\n          ...isNotEmpty('id', 'remoteJid'),\n        },\n        messageTimestamp: { type: 'integer', minLength: 1 },\n      },\n      required: ['key'],\n      ...isNotEmpty('messageTimestamp'),\n    },\n    archive: { type: 'boolean', enum: [true, false] },\n  },\n  required: ['archive'],\n};\n\nexport const markChatUnreadSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    chat: { type: 'string' },\n    lastMessage: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'object',\n          properties: {\n            id: { type: 'string' },\n            remoteJid: { type: 'string' },\n            fromMe: { type: 'boolean', enum: [true, false] },\n          },\n          required: ['id', 'fromMe', 'remoteJid'],\n          ...isNotEmpty('id', 'remoteJid'),\n        },\n        messageTimestamp: { type: 'integer', minLength: 1 },\n      },\n      required: ['key'],\n      ...isNotEmpty('messageTimestamp'),\n    },\n  },\n  required: ['lastMessage'],\n};\n\nexport const deleteMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    id: { type: 'string' },\n    fromMe: { type: 'boolean', enum: [true, false] },\n    remoteJid: { type: 'string' },\n    participant: { type: 'string' },\n  },\n  required: ['id', 'fromMe', 'remoteJid'],\n  ...isNotEmpty('id', 'remoteJid', 'participant'),\n};\n\nexport const profilePictureSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    picture: { type: 'string' },\n  },\n};\n\nexport const updateMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    text: { type: 'string' },\n    key: {\n      type: 'object',\n      properties: {\n        id: { type: 'string' },\n        remoteJid: { type: 'string' },\n        fromMe: { type: 'boolean', enum: [true, false] },\n      },\n      required: ['id', 'fromMe', 'remoteJid'],\n      ...isNotEmpty('id', 'remoteJid'),\n    },\n  },\n  ...isNotEmpty('number', 'text', 'key'),\n};\n\nexport const presenceSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { ...numberDefinition },\n    delay: { type: 'number' },\n    presence: {\n      type: 'string',\n      enum: ['unavailable', 'available', 'composing', 'recording', 'paused'],\n    },\n  },\n  required: ['number', 'presence', 'delay'],\n};\n\nexport const blockUserSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    status: { type: 'string', enum: ['block', 'unblock'] },\n  },\n  required: ['number', 'status'],\n  ...isNotEmpty('number', 'status'),\n};\n\nexport const contactValidateSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string', minLength: 1 },\n        pushName: { type: 'string', minLength: 1 },\n        id: { type: 'string', minLength: 1 },\n      },\n      ...isNotEmpty('_id', 'id', 'pushName'),\n    },\n  },\n};\n\nexport const messageValidateSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string', minLength: 1 },\n        key: {\n          type: 'object',\n          if: {\n            propertyNames: {\n              enum: ['fromMe', 'remoteJid', 'id'],\n            },\n          },\n          then: {\n            properties: {\n              remoteJid: {\n                type: 'string',\n                minLength: 1,\n                description: 'The property cannot be empty',\n              },\n              id: {\n                type: 'string',\n                minLength: 1,\n                description: 'The property cannot be empty',\n              },\n              fromMe: { type: 'boolean', enum: [true, false] },\n            },\n          },\n        },\n        message: { type: 'object' },\n      },\n      ...isNotEmpty('_id'),\n    },\n    limit: { type: 'integer' },\n  },\n};\n\nexport const messageUpSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string' },\n        remoteJid: { type: 'string' },\n        id: { type: 'string' },\n        fromMe: { type: 'boolean', enum: [true, false] },\n        participant: { type: 'string' },\n        status: {\n          type: 'string',\n          enum: ['ERROR', 'PENDING', 'SERVER_ACK', 'DELIVERY_ACK', 'READ', 'PLAYED'],\n        },\n      },\n      ...isNotEmpty('_id', 'remoteJid', 'id', 'status'),\n    },\n    limit: { type: 'integer' },\n  },\n};\n\nexport const privacySettingsSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    readreceipts: { type: 'string', enum: ['all', 'none'] },\n    profile: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n    status: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n    online: { type: 'string', enum: ['all', 'match_last_seen'] },\n    last: { type: 'string', enum: ['all', 'contacts', 'contact_blacklist', 'none'] },\n    groupadd: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n  },\n  required: ['readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'],\n  ...isNotEmpty('readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'),\n};\n\nexport const profileNameSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    name: { type: 'string' },\n  },\n  ...isNotEmpty('name'),\n};\n\nexport const profileStatusSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    status: { type: 'string' },\n  },\n  ...isNotEmpty('status'),\n};\n\nexport const profileSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    wuid: { type: 'string' },\n    name: { type: 'string' },\n    picture: { type: 'string' },\n    status: { type: 'string' },\n    isBusiness: { type: 'boolean' },\n  },\n};\n"],"mappings":"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","names":["crypto","rnds8Pool","poolPtr","rng","byteToHex","i","unsafeStringify","arr","offset","crypto","native_default","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","isNotEmpty","propertyNames","properties","property","numberDefinition","whatsappNumberSchema","v4_default","readMessageSchema","archiveChatSchema","markChatUnreadSchema","deleteMessageSchema","profilePictureSchema","updateMessageSchema","presenceSchema","blockUserSchema","contactValidateSchema","messageValidateSchema","messageUpSchema","privacySettingsSchema","profileNameSchema","profileStatusSchema","profileSchema"]}